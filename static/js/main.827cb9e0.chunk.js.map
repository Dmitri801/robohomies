{"version":3,"sources":["components/Header.jsx","components/Card.jsx","components/CardList.jsx","components/Main.jsx","components/ErrorBoundary.jsx","containers/App.js","store/actions/robotActions.js","store/actions/constants.js","store/reducers/robotReducer.js","store/reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["Header","_this","this","react_default","a","createElement","className","style","styles","header","h1","placeholder","input","value","props","searchValue","onChange","e","onSearchChange","target","type","Component","position","height","width","display","flexFlow","alignItems","justifyContent","fontFamily","fontSize","color","padding","background","border","borderRadius","letterSpacing","fontWeight","Card","_ref","id","name","email","src","concat","alt","CardList","robots","map","robot","components_Card","key","main","borderTop","overflowY","Main","children","ErrorBoundary","state","hasError","error","info","setState","App","searchFieldChange","getAllRobots","loading","filteredRobots","_this2","length","filter","toLowerCase","includes","components_Header","components_Main","components_ErrorBoundary","components_CardList","connect","searchField","text","payload","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","request","wrap","_context","prev","next","fetch","then","res","json","sent","stop","_x","apply","arguments","initialState","combineReducers","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.827cb9e0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header\" style={styles.header}>\n        <div>\n          <h1 style={styles.h1}>Robo-Homies</h1>\n        </div>\n        <div>\n          <input\n            className=\"searchInput\"\n            placeholder=\"Search..\"\n            style={styles.input}\n            value={this.props.searchValue}\n            onChange={e => this.props.onSearchChange(e.target.value)}\n            type=\"text\"\n          />\n        </div>\n      </header>\n    );\n  }\n}\n\nconst styles = {\n  header: {\n    position: \"relative\",\n    height: \"250px\",\n    width: \"100%\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  },\n  h1: {\n    fontFamily: \"'Major Mono Display', monospace\",\n    fontSize: \"4em\",\n\n    color: \"#fff\"\n  },\n\n  input: {\n    padding: \"15px\",\n    background: \"#333\",\n    border: \"none\",\n    width: \"180px\",\n    color: \"#fff\",\n    fontSize: \"1.2em\",\n    borderRadius: \"5px\",\n    letterSpacing: \"2px\",\n    fontWeight: \"900\"\n  }\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction Card({ id, name, email }) {\n  return (\n    <div className=\"card\">\n      <img\n        src={`https://robohash.org/asdlfjls${id}.png?200x200?set=set3`}\n        alt=\"\"\n      />\n      <div className=\"card-content\">\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nfunction CardList({ robots }) {\n  return (\n    <div className=\"card-container\">\n      {robots.map(robot => (\n        <Card\n          key={robot.id}\n          id={robot.id}\n          name={robot.name}\n          email={robot.email}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from \"react\";\n\nfunction Main({ children }) {\n  return <main style={styles.main}>{children}</main>;\n}\n\nconst styles = {\n  main: {\n    borderTop: \"5px solid #111\",\n    height: \"calc(100vh - 400px)\",\n    overflowY: \"auto\",\n    padding: \"80px\"\n  }\n};\n\nexport default Main;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Error Fam..</h1>;\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport CardList from \"../components/CardList\";\nimport Main from \"../components/Main\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport { searchFieldChange, getAllRobots } from \"../store/actions/robotActions\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getAllRobots();\n\n    this.setState({ loading: false });\n  }\n  onSearchChange = value => {\n    this.props.searchFieldChange(value);\n  };\n  render() {\n    let loading = true;\n    let filteredRobots;\n    if (this.props.robots.length > 0) {\n      filteredRobots = this.props.robots.filter(robot => {\n        return robot.name\n          .toLowerCase()\n          .includes(this.props.searchValue.toLowerCase());\n      });\n      loading = false;\n    }\n\n    return (\n      <div className=\"App\">\n        <Header\n          searchValue={this.props.searchValue}\n          onSearchChange={this.onSearchChange}\n        />\n        {loading ? (\n          \"Loading..\"\n        ) : (\n          <Main>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Main>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchValue: state.robots.searchField,\n  robots: state.robots.robots\n});\n\nexport default connect(\n  mapStateToProps,\n  { searchFieldChange, getAllRobots }\n)(App);\n","import { CHANGE_SEARCHFIELD, GET_ROBOTS } from \"./constants\";\n\nexport const searchFieldChange = text => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text\n});\n\nexport const getAllRobots = () => {\n  return async function(dispatch) {\n    const request = await fetch(\n      \"https://jsonplaceholder.typicode.com/users\"\n    ).then(res => res.json());\n\n    dispatch({\n      type: GET_ROBOTS,\n      payload: request\n    });\n  };\n};\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\nexport const GET_ROBOTS = \"GET_ROBOTS\";\n","import { CHANGE_SEARCHFIELD, GET_ROBOTS } from \"../actions/constants\";\nconst initialState = {\n  searchField: \"\",\n  robots: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return {\n        ...state,\n        searchField: action.payload\n      };\n    case GET_ROBOTS:\n      return {\n        ...state,\n        robots: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport robotReducer from \"./robotReducer\";\nexport default combineReducers({\n  robots: robotReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}